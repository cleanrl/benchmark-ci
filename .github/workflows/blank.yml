name: "Deploy on Comment"

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  issue_comment:
    types: [created]

jobs:
  deploy:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.8]
        poetry-version: [1.3]
        os: [self-hosted]

    name: Deploy
    # Only run if it#s a PR and the comment contains /deploy
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/deploy') && contains('["vwxyzjn", "younesbelkada", "lvwerra"]', github.actor)
    runs-on: ${{ matrix.os }}
    outputs:
      output1: ${{ steps.benchmark.outputs.job_ids }}
    steps:
      - name: Get branch of PR
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
      - name: Checkout PR branch ${{ steps.comment-branch.outputs.head_ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # benchmark tests
      - name: Install core dependencies
        run: ls
      - name: Install core dependencies
        run: poetry install --no-root
      - name: Login
        run: poetry run wandb login ${{ secrets.WANDB_API_KEY }} && poetry run huggingface-cli login --token ${{ secrets.HUGGING_FACE_HUB_TOKEN }}
      - name: Run benchmark
        id: benchmark
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          job_ids=$(poetry run bash benchmark/benchmark.sh | grep 'Job ID' | awk '{print $NF}' | paste -sd: -)
          echo "test=$job_ids" >> $GITHUB_OUTPUT

      # send message to PR
      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Add workflow result as comment on PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow	}}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}


  checkjobs:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.8]
        poetry-version: [1.3]
        os: [ubuntu-latest]
    name: test
    runs-on: ${{ matrix.os }}
    needs: deploy
    steps:
      - run: echo ${{needs.deploy.outputs.job_ids}}
      - name: Get branch of PR
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
      - name: Checkout PR branch ${{ steps.comment-branch.outputs.head_ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # benchmark tests
      - name: Install core dependencies
        run: pip install openrlbenchmark==0.2.1a5 huggingface-hub tyro ghapi
      - name: Run script with environment variable
        run: job_ids=${{needs.deploy.outputs.job_ids}} bash benchmark/post.sh
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}



  post-images:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.8]
        poetry-version: [1.3]
        os: [ubuntu-latest]

    name: Deploy
    # Only run if it#s a PR and the comment contains /deploy
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/image') && contains('["vwxyzjn", "younesbelkada", "lvwerra"]', github.actor)
    runs-on: ${{ matrix.os }}

    steps:
      - name: Get branch of PR
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
      - name: Checkout PR branch ${{ steps.comment-branch.outputs.head_ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # benchmark tests
      - name: Install core dependencies
        run: poetry run pip install openrlbenchmark==0.2.1a5 huggingface-hub tyro
      - name: Upload images
        run: echo "TAG=no-tag-1-gb906f3d" >> $GITHUB_ENV
      - name: Upload images
        run: poetry run wandb login ${{ secrets.WANDB_API_KEY }} && poetry run huggingface-cli login --token ${{ secrets.HUGGING_FACE_HUB_TOKEN }} &&  bash benchmark/plot.sh

      # send message to PR
      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Add workflow result as comment on PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            const artifactPath = `benchmark/trl/${process.env.TAG}`
            const imageFiles = fs.readdirSync(artifactPath).filter(file => file.endsWith('.png')); // Assuming PNGs. Adjust if needed.
            
            const name = '${{ github.workflow }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const statusMessage = `${name}: Here are the benchmark results`;
            url_host = "https://huggingface.co/datasets/trl-internal-testing/example-images/resolve/main/images/benchmark"
            let body = statusMessage + "\n\n";
            for(const file of imageFiles) {
              body += `![${file}](${url_host}/${process.env.TAG}/${file})\n\n`; // Replace URL-TO-YOUR-IMAGE-HOST with actual base URL.
            }

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });



  test:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.8]
        poetry-version: [1.3]
        os: [ubuntu-latest]

    name: test
    # Only run if it#s a PR and the comment contains /deploy
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/test') && contains('["vwxyzjn", "younesbelkada", "lvwerra"]', github.actor)
    runs-on: ${{ matrix.os }}

    steps:
      - name: Get branch of PR
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
      - name: Checkout PR branch ${{ steps.comment-branch.outputs.head_ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # benchmark tests
      - name: Install core dependencies
        run: pip install openrlbenchmark==0.2.1a5 huggingface-hub tyro ghapi

      - name: Run script with environment variable
        run: python benchmark/post_github_comment.py
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
